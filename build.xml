<project name="jgrapes" default="compile" basedir=".">
    <description>
      Java bindings for GRAPES: the Generic Resource-Aware P2P Environment for Streaming
    </description>

  <!-- set locations -->
  <property name="src-dir" location="src"/>
  <property name="build-dir" location="build"/>
  <property name="dist-dir"  location="dist"/>
  <property name="jniheaders-dir" location="native/jni-inc"/>
  <property name="nativesrc-dir" location="native/"/>

  <!-- set project metadata -->
  <property name="jgrapes" value="jgrapes"/>
  <property name="version" value="0.1"/>

  <!-- set constants -->
  <property name="MAKE" value="make"/>

  <!-- set paths -->
  <path id="classpath.compile">
    <fileset dir="lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <path id="classpath.run">
    <path refId="classpath.compile"/>
    <pathelement location="${build-dir}"/>
  </path>

  <!-- set native class paths -->
  <property name="jgrapes-native.classes" value="jgrapes.PeerSampler,jgrapes.NetworkHelper,jgrapes.CloudHelper"/>

  <!-- set test class names -->
  <property name="topology-test" value="jgrapes.test.TopologyTest"/>

  <!--
      *********************************************************************
      *                Targets definition
      **********************************************************************
  -->
  <target name="init">
    <condition property="platform" value="unix">
      <and>
        <os family="unix"/>
        <not> <os family="mac"/> </not>
      </and>
    </condition>

    <condition property="platform" value="darwin">
      <and>
        <os family="unix"/>
        <os family="mac"/>
      </and>
    </condition>

    <echo message="Detected platform: ${platform}"/>
    <tstamp/>
  </target>

  <target name="compile" depends="init" description="compile the source">
    <mkdir dir="${build-dir}"/>
    <javac srcdir="${src-dir}"
           destdir="${build-dir}"
           debug="true"
           target="1.5"
           includeAntRuntime="false">
      <classpath>
        <path refid="classpath.compile"/>
      </classpath>
    </javac>
  </target>


  <target name="jniheaders" depends="compile" description="build the jni heraders">
    <echo message="Building jni headers for: ${jgrapes-native.classes}"/>
    <mkdir dir="${jniheaders-dir}"/>
    <javah class="${jgrapes-native.classes}" destdir="${jniheaders-dir}">
      <classpath>
        <path refid="classpath.run"/>
      </classpath>
    </javah>
  </target>

  <target name="native" depends="jniheaders" description="build the native library">
    <exec executable="${MAKE}" dir="${nativesrc-dir}" failonerror="true">
      <arg line="PLATFORM=${platform}"/>
    </exec>
  </target>

  <target name="dist" depends="compile" description="generate the distribution" >
    <mkdir dir="${dist-dir}"/>

    <jar jarfile="${dist}/${jgrapes}-${version}.jar" basedir="${build}"/>
  </target>

  <target name="clean" description="clean up" >
    <delete dir="${build-dir}"/>
    <delete dir="${dist-dir}"/>
    <delete dir="${jniheaders-dir}"/>

    <exec executable="${MAKE}" dir="${nativesrc-dir}">
      <arg line="clean"/>
    </exec>
  </target>

  <!--
      *********************************************************************
      *                Run Target definition
      **********************************************************************
  -->
  <target name="run-topology-test" depends="compile, native" description="test: topology process based">
    <echo message="Invoking with args (use -Dargs='...' to set args): ${args}"/>
    <java classname="${topology-test}" fork="true">
      <!-- set classpath -->
      <classpath>
        <path refid="classpath.run"/>
      </classpath>

      <!-- set jvm arguments -->
      <!-- <jvmarg value=""/> -->
      <jvmarg value="-Xmx512M"/>
      <jvmarg value="-Djava.library.path=${nativesrc-dir}"/>

      <!-- set app arguments -->
      <arg line="${args}"/>

    </java>
  </target>
</project>